name: CI

on: [push, pull_request, workflow_dispatch]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [hitachi, macho, ml]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || true
          pip install -r requirements-dev.txt || true
          pip install pytest pytest-cov bandit pip-audit black flake8 isort

      - name: Lint and security
        run: |
          black --check .
          isort --check-only .
          flake8 .
          bandit -r . --skip B101,B601
          pip-audit --strict
          ggshield secret scan repo -v --all-history || true

      - name: Tests with coverage
        run: |
          case ${{ matrix.project }} in
            hitachi)
              cd hitachi
              pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-fail-under=85
              ;;
            macho)
              cd HVDC_Invoice_Audit
              pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-fail-under=85 -m "not integration"
              ;;
            ml)
              cd ML
              pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-fail-under=85
              ;;
          esac

      - name: Upload coverage xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.project }}-xml
          path: ${{ matrix.project }}/coverage.xml

      - name: Upload to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ${{ matrix.project }}/coverage.xml
          flags: ${{ matrix.project }}
          name: ${{ matrix.project }}-coverage

  integration:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install all dependencies
        run: |
          python -m pip install -U pip
          find . -name "requirements.txt" -not -path "*/venv/*" -exec pip install -r {} \;
          pip install pytest pytest-cov

      - name: Run integration tests
        run: pytest -v -m "integration" --timeout=300 --maxfail=5
        continue-on-error: true

